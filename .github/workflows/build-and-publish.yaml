name: Build and publish

on:
  push:

jobs:
  release-please:
    name: Release Please 📦
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RP_PAT }}
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json

  test:
    name: Test Package
    runs-on: macos-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          #- "3.11"
          #- "3.12"
          #- "3.13"

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Add Client Certificate to Keychain
        run: |
            sudo security add-trusted-cert -d -r trustRoot tests/certs/mtls/client/client.pem
            sudo security add-trusted-cert -d -r trustRoot ./tests/certs/expired/ca/ca.crt
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run tests
        run: uv run pytest tests

  build:
    name: Build distribution 📦
    runs-on: macos-latest
    needs:
      - test

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Build a binary wheel and a source tarball
        run: uv build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    runs-on: ubuntu-latest
    needs:
      - build
      - release-please
    if: ${{ needs.release-please.outputs.release_created }}
    environment:
      name: pypi
      url: https://pypi.org/p/mac-gurl
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  update-github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
      - release-please
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload ${{ needs.release-please.outputs.tag_name }}
          dist/**
          --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    environment:
      name: testpypi
      url: https://test.pypi.org/p/mac-gurl

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # TODO update package version to publish to testpypi
          skip-existing: true
          verbose: true
          repository-url: https://test.pypi.org/legacy/
